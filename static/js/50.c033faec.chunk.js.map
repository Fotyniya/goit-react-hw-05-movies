{"version":3,"file":"static/js/50.c033faec.chunk.js","mappings":"qQAAaA,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,+BACE,kBACEC,KAAK,OACLF,MAAOA,EACPC,SAAU,SAACE,GAAD,OAAOF,EAASE,EAAEC,OAAOJ,MAAzB,KAIjB,ECFGK,EAAU,mCACVC,EAAW,4CAwDjB,EAtDe,WAAO,IAAD,EACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAU,UAAGF,EAAaG,IAAI,iBAApB,QAAiC,GAC/C,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,sGAIcC,EAJd,UAIuBZ,EAJvB,oBAI2CD,EAJ3C,wCAIkFK,GAJlF,SAK+BS,EAAAA,EAAAA,IAAUD,GALzC,OAKcE,EALd,OAMQC,QAAQC,IAAIF,GACZN,EAAUM,EAASG,KAAKC,SAPhC,gDAWQH,QAAQC,IAAR,MAXR,sGAFY,uBAAC,WAAD,wBAkBZG,EACH,GAAE,CAACf,IAYJ,OACI,4BACI,SAACX,EAAD,CAAWC,MAAOU,EAAYT,SAPZ,SAACyB,GAEvBjB,EAD8B,KAAXiB,EAAgB,CAAEA,OAAAA,GAAW,CAAC,EAElD,KAKK,mBAAQxB,KAAK,SAASyB,QAbT,WACjBN,QAAQC,IAAIT,EAEf,EAUO,oBACEH,GAAcG,EAAOe,KAAI,SAAAC,GACvB,OACI,yBACI,yBACA,SAAC,KAAD,CAAqBC,GAAE,WAAMD,EAAME,IAAMC,MAAS,CAACC,KAAMlB,GAAzD,SAAsEc,EAAMK,OAAjEL,EAAME,OAFZF,EAAME,GAMtB,MAGZ,C","sources":["components/SearchBox.jsx","components/pages/Movies.jsx"],"sourcesContent":["export const SearchBox = ({ value, onChange }) => {\n    return (\n      <>\n        <input\n          type=\"text\"\n          value={value}\n          onChange={(e) => onChange(e.target.value)}\n        />\n      </>\n    );\n  };","import { useEffect, useState } from \"react\";\nimport { useSearchParams, Link, useLocation } from \"react-router-dom\";\n\nimport axios from 'axios';\nimport { SearchBox } from \"components/SearchBox\";\n\n//import { ColorRing } from  'react-loader-spinner'\n//import MovieDetails from \"./MovieDetails\";\nconst API_KEY = '28b9dff9541e6a7c7078bb12d751dcf6';\nconst BASE_URL = 'https://api.themoviedb.org/3/search/movie';\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams();    \n    let movieTitle = searchParams.get(\"filter\") ?? '';\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n        \n    useEffect(() => {\n    \n        async function fetchData(){\n           \n            //setIsLoading(true);\n            try { \n                const url = `${BASE_URL}?api_key=${API_KEY}&language=en-US&page=1&query=${movieTitle}`;\n                const response = await axios.get(url);\n                console.log(response);\n                setMovies(response.data.results);\n                //setTotalPages(response.data.total_pages);\n            } catch(error) {\n                //setError(error)\n                console.log (error)\n            } finally {\n                //setIsLoading(false); \n            }\n        };\n        fetchData()\n    }, [movieTitle]);\n    \n    const handleFilter = () => {   \n        console.log(movies); \n          \n    };\n    \n    const updateQueryString = (filter) => {\n        const nextParams = filter !== \"\" ? { filter } : {};\n        setSearchParams(nextParams);\n      };\n\n    return (\n        <div> \n            <SearchBox value={movieTitle} onChange={updateQueryString} />\n            <button type='button' onClick = { handleFilter }>Search</button>\n            { movieTitle && movies.map(movie => {\n                return (\n                    <ul key={movie.id}>\n                        <li >\n                        <Link key={movie.id} to={`/${movie.id}`} state = {{from: location}} >{movie.title}</Link>\n                        </li>\n                    </ul>   \n                )\n            })}  \n        </div>\n    );\n};\n\nexport default Movies;\n"],"names":["SearchBox","value","onChange","type","e","target","API_KEY","BASE_URL","useSearchParams","searchParams","setSearchParams","movieTitle","get","useState","movies","setMovies","location","useLocation","useEffect","url","axios","response","console","log","data","results","fetchData","filter","onClick","map","movie","to","id","state","from","title"],"sourceRoot":""}