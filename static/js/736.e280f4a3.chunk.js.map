{"version":3,"file":"static/js/736.e280f4a3.chunk.js","mappings":"uRAEaA,GAAWC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,0HAORC,GAAeD,EAAAA,EAAAA,IAAO,KAAPA,CAAH,uEAKZE,GAAWF,EAAAA,EAAAA,IAAO,MAAPA,CAAH,oG,SCNfG,EAAU,mCACVC,EAAW,sCA8DjB,EA5Da,WACT,OAAyBC,EAAAA,EAAAA,UAAS,IAAlC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,UAAS,IAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACOC,GAAWC,EAAAA,EAAAA,MAAXD,SAEPE,EAAAA,EAAAA,YAAU,WAAM,wCAEZ,6FAEIH,GAAa,GAFjB,SAIcI,EAJd,UAIuBT,GAJvB,OAIkCM,EAJlC,4BAI6DP,EAJ7D,4BAK+BW,EAAAA,EAAAA,IAAUD,GALzC,OAKcE,EALd,OAMQC,QAAQC,IAAIF,GACZR,EAAQQ,EAASG,KAAKC,MAP9B,kDASQH,QAAQC,IAAR,MATR,yBAWQR,GAAa,GAXrB,8EAFY,uBAAC,WAAD,wBAgBZW,EACH,GAAE,CAACV,IAEJ,IAAMW,EAAW,IAAIC,IACjB,YAIJ,OAAO,gCACFd,IAAa,SAAC,KAAD,CACVe,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAEzD,SAAC3B,EAAD,UACCI,EAAMwB,KAAI,SAAAX,GACP,OACI,SAAClB,EAAD,WACI,0BACEkB,EAAKY,cAAgB,SAAChC,EAAD,CACnBiC,IAAK,kCAAkCb,EAAKY,aAC5CE,IAAKd,EAAKe,iBACV,SAACnC,EAAD,CAAUiC,IAAKX,EAAUY,IAAI,WAAWT,OAAO,SAGnD,uBAAIL,EAAKgB,QACT,uCAAehB,EAAKiB,UAApB,WATejB,EAAKkB,GAa3B,QAGZ,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastCard = styled('img')`\n    width: 240px;\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n`;\n\nexport const CastListItem = styled('ul')`\n    list-style-type: none;\n    padding: 0px;\n`;\n\nexport const CastList = styled('div')`\n    display: flex;\n    flex-wrap: wrap;\n    gap: 5px;\n    padding: 0px;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport { ColorRing } from  'react-loader-spinner'\n\nimport { CastList, CastListItem, CastCard } from \"components/Cast/Cast.styled\";\n\n\nconst API_KEY = '28b9dff9541e6a7c7078bb12d751dcf6';\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/';\n\nconst Cast = () => {\n    const [casts, setCast] = useState([]);\n    const [isLoading, setIsLoading] = useState([]);\n    const {movieId} = useParams();\n\n    useEffect(() => {\n    \n        async function fetchData(){\n           \n            setIsLoading(true);\n            try { \n                const url = `${BASE_URL}${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n                const response = await axios.get(url);\n                console.log(response);\n                setCast(response.data.cast);\n            } catch(error) {\n                console.log (error)\n            } finally {\n                setIsLoading(false); \n            }\n        };\n        fetchData()\n    }, [movieId]);\n\n    const imageUrl = new URL(\n        'components/images/defaultImg.png?width=240',\n        import.meta.url\n      );\n\n    return <>\n        {isLoading && <ColorRing\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"blocks-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"blocks-wrapper\"\n            colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n        />}\n        <CastList>\n        {casts.map(cast => {\n            return (\n                <CastListItem key={cast.id}>\n                    <li >\n                    {(cast.profile_path) ? <CastCard \n                        src={'https://image.tmdb.org/t/p/w500'+cast.profile_path}  \n                        alt={cast.original_name} /> : \n                        <CastCard src={imageUrl} alt='No photo' height=\"360\" /> \n                    }\n                    \n                    <p>{cast.name}</p>\n                    <p>Character: {cast.character} </p>\n                    </li>\n                </CastListItem>   \n                )\n            })} \n        </CastList>\n    </>\n};\n\nexport default Cast;"],"names":["CastCard","styled","CastListItem","CastList","API_KEY","BASE_URL","useState","casts","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","url","axios","response","console","log","data","cast","fetchData","imageUrl","URL","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","map","profile_path","src","alt","original_name","name","character","id"],"sourceRoot":""}